;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name om-tut.core, :imports nil, :requires {om om.core, om.core om.core, dom om.dom, om.dom om.dom, cljs.core.async cljs.core.async}, :uses {<! cljs.core.async, chan cljs.core.async, put! cljs.core.async}, :defs {->t_om_tut$core19571 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([contacts-view data owner meta19572])), :file nil}, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name om-tut.core/->t_om_tut$core19571, :variadic false, :file "/home/benji/Projects/om-tut/src/om_tut/core.cljs", :method-params ([contacts-view data owner meta19572]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 44, :max-fixed-arity 4, :fn-var true, :arglists (quote ([contacts-view data owner meta19572])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_om_tut$core19571 {:num-fields 4, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name om-tut.core/t_om_tut$core19571, :file "/home/benji/Projects/om-tut/src/om_tut/core.cljs", :type true, :anonymous true, :column 3, :line 44, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, middle-name {:protocol-inline nil, :meta {:file "/home/benji/Projects/om-tut/src/om_tut/core.cljs", :line 26, :column 7, :end-line 26, :end-column 18, :arglists (quote ([{:keys [middle middle-initial]}]))}, :name om-tut.core/middle-name, :variadic false, :file "/home/benji/Projects/om-tut/src/om_tut/core.cljs", :end-column 18, :method-params ([p__19548]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [middle middle-initial]}]))}, t_om_tut$core19598 {:num-fields 4, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name om-tut.core/t_om_tut$core19598, :file "/home/benji/Projects/om-tut/src/om_tut/core.cljs", :type true, :anonymous true, :column 3, :line 44, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, contacts-view {:protocol-inline nil, :meta {:file "/home/benji/Projects/om-tut/src/om_tut/core.cljs", :line 42, :column 7, :end-line 42, :end-column 20, :arglists (quote ([data owner]))}, :name om-tut.core/contacts-view, :variadic false, :file "/home/benji/Projects/om-tut/src/om_tut/core.cljs", :end-column 20, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, t_om_tut$core19558 {:num-fields 4, :protocols #{om.core/IRenderState cljs.core/IMeta cljs.core/IWithMeta}, :name om-tut.core/t_om_tut$core19558, :file "/home/benji/Projects/om-tut/src/om_tut/core.cljs", :type true, :anonymous true, :column 3, :line 35, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, contact-view {:protocol-inline nil, :meta {:file "/home/benji/Projects/om-tut/src/om_tut/core.cljs", :line 34, :column 7, :end-line 34, :end-column 19, :arglists (quote ([contact owner]))}, :name om-tut.core/contact-view, :variadic false, :file "/home/benji/Projects/om-tut/src/om_tut/core.cljs", :end-column 19, :method-params ([contact owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([contact owner]))}, ->t_om_tut$core19598 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([contacts-view data owner meta19599])), :file nil}, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta om.core/IInitState cljs.core/IWithMeta}, :name om-tut.core/->t_om_tut$core19598, :variadic false, :file "/home/benji/Projects/om-tut/src/om_tut/core.cljs", :method-params ([contacts-view data owner meta19599]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 44, :max-fixed-arity 4, :fn-var true, :arglists (quote ([contacts-view data owner meta19599])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_om_tut$core19564 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([contact-view contact owner meta19565])), :file nil}, :protocols #{om.core/IRenderState cljs.core/IMeta cljs.core/IWithMeta}, :name om-tut.core/->t_om_tut$core19564, :variadic false, :file "/home/benji/Projects/om-tut/src/om_tut/core.cljs", :method-params ([contact-view contact owner meta19565]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 35, :max-fixed-arity 4, :fn-var true, :arglists (quote ([contact-view contact owner meta19565])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_om_tut$core19558 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([contact-view contact owner meta19559])), :file nil}, :protocols #{om.core/IRenderState cljs.core/IMeta cljs.core/IWithMeta}, :name om-tut.core/->t_om_tut$core19558, :variadic false, :file "/home/benji/Projects/om-tut/src/om_tut/core.cljs", :method-params ([contact-view contact owner meta19559]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 35, :max-fixed-arity 4, :fn-var true, :arglists (quote ([contact-view contact owner meta19559])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_om_tut$core19564 {:num-fields 4, :protocols #{om.core/IRenderState cljs.core/IMeta cljs.core/IWithMeta}, :name om-tut.core/t_om_tut$core19564, :file "/home/benji/Projects/om-tut/src/om_tut/core.cljs", :type true, :anonymous true, :column 3, :line 35, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, app-state {:name om-tut.core/app-state, :file "/home/benji/Projects/om-tut/src/om_tut/core.cljs", :line 16, :column 1, :end-line 16, :end-column 19, :meta {:file "/home/benji/Projects/om-tut/src/om_tut/core.cljs", :line 16, :column 10, :end-line 16, :end-column 19}}, on-js-reload {:protocol-inline nil, :meta {:file "/home/benji/Projects/om-tut/src/om_tut/core.cljs", :line 108, :column 7, :end-line 108, :end-column 19, :arglists (quote ([]))}, :name om-tut.core/on-js-reload, :variadic false, :file "/home/benji/Projects/om-tut/src/om_tut/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, display-name {:protocol-inline nil, :meta {:file "/home/benji/Projects/om-tut/src/om_tut/core.cljs", :line 31, :column 7, :end-line 31, :end-column 19, :arglists (quote ([{:keys [first last], :as contact}]))}, :name om-tut.core/display-name, :variadic false, :file "/home/benji/Projects/om-tut/src/om_tut/core.cljs", :end-column 19, :method-params ([p__19553]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [first last], :as contact}]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, om om.core, om.core om.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:email contact owner :middle-initial data meta19559 :else :contacts meta19572 :recur :init-state :delete contacts-view contact-view meta19565 :middle :target :first quote :arglists :last meta19599}, :order [:contacts :first :last :email :middle-initial :middle :delete contact-view :arglists quote contact owner meta19559 meta19565 :recur :else :init-state contacts-view data meta19572 meta19599 :target]}, :doc nil}